xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
windows()
matplot(rate_IMCLs[,1:25],aveSOS2[,1:25],
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
windows()
matplot(rate_IMCLs[,1:25],aveSOS2[,1:25],
pch = 1:25,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
#上のやり方では細かすぎるので，一つのグラフに重ねてプロットする．
windows()
matplot(rate_IMCLs[,1:25],aveSOS2[,1:25],
col = 1,
type = 'b',
pch = 1:25,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
#上のやり方では細かすぎるので，一つのグラフに重ねてプロットする．
windows()
matplot(rate_IMCLs[,1:25],aveSOS2[,1:25],
col = 1,
type = 'o',
pch = 1:25,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
#上のやり方では細かすぎるので，一つのグラフに重ねてプロットする．
windows()
matplot(rate_IMCLs[,1:25]*0.1,aveSOS2[,1:25],
col = 1,
type = 'o',
pch = 1:25,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
detach("package:ggsci", unload=TRUE)
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_IMCLs[,1:25]*0.1,aveSOS2[,1:25],
col = 1,
type = 'o',
pch = 1:25,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
install.packages(scatterplot3d)
install.packages("scatterplot3d")
#water-fallプロットもしくはメッシュプロットで，IMCLとEMCLが平均音速値に与える影響を見てみる．
library(scatterplot3d)
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(rate_EMCLs[,1:25],rate_IMCLs[,1:25]*0.1,aveSOS2[,1:25])
#water-fallプロットもしくはメッシュプロットで，IMCLとEMCLが平均音速値に与える影響を見てみる．
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(t(rate_EMCLs[,1:25]),t(rate_IMCLs[,1:25])*0.1,t(aveSOS2[,1:25]))
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(t(rate_EMCLs[,1:25]),t(rate_IMCLs[,1:25]*0.1),t(aveSOS2[,1:25]))
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(rate_EMCLs,rate_IMCLs,aveSOS2)
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(rate_EMCLs[,1:25],rate_IMCLs[,1:25]*0.1,aveSOS2)
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(rate_EMCLs[,1],rate_IMCLs[,1]*0.1,aveSOS2)
#water-fallプロットもしくはメッシュプロットで，IMCLとEMCLが平均音速値に与える影響を見てみる．
library(scatterplot3d)
window()
par(ps=18,mex=1.2,pty='s')
scatterplot3d(t(rate_EMCLs),t(rate_IMCLs)*0.1,t(aveSOS2))
x_tmp = t(rate_IMCLs[,1:25]*0.1)
y_tmp = t(aveSOS2[,1:25])
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1565, 1525))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
View(result)
View(rate_IMCLs)
# 横軸にIMCL率，縦軸に平均音速値をとり，全サンプル分プロットする．
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs[,1]*0.1)
# 横軸にIMCL率，縦軸に平均音速値をとり，全サンプル分プロットする．
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs[,1]*0.1)
x_tmp = t(rate_IMCLs[,1]*0.1)
View(x_tmp)
x_tmp = t(rate_IMCLs[,1]*0.1)
for (ii in 2:25){
x_tmp <- rbind(x_tmp,t(rate_IMCLs[,ii]*0.1))
}
View(x_tmp)
x_tmp = t(rate_IMCLs[,1]*0.1)
for (ii in 2:25){
x_tmp <- cbind(x_tmp,t(rate_IMCLs[,ii]*0.1))
}
View(x_tmp)
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs[,1]*0.1)
y_tmp = t(aveSOS2[,1])
for (ii in 2:25){
x_tmp <- cbind(x_tmp,t(rate_IMCLs[,ii]*0.1))
y_tmp <- cbind(y_tmp,t(aveSOS2[,ii]))
}
x_tmp = t(rate_IMCLs[,1]*0.1)
y_tmp = t(aveSOS2[,1])
for (ii in 2:25){
x_tmp <- cbind(x_tmp,t(rate_IMCLs[,ii]*0.1))
y_tmp <- cbind(y_tmp,t(aveSOS2[,ii]))
}
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
View(result)
result$coefficients
x_tmp = rate_IMCLs[,1]*0.1
y_tmp = aveSOS2[,1]
for (ii in 2:25){
x_tmp <- rbind(x_tmp,rate_IMCLs[,ii]*0.1)
y_tmp <- rbind(y_tmp,aveSOS2[,ii])
}
x_tmp = rate_IMCLs[,1]*0.1
y_tmp = aveSOS2[,1]
for (ii in 2:25){
x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
y_tmp <- cbind(y_tmp,aveSOS2[,ii])
}
x_tmp = rate_IMCLs[,1]*0.1
y_tmp = aveSOS2[,1]
for (ii in 2:25){
x_tmp <- rbind(x_tmp,rate_IMCLs[,ii]*0.1)
y_tmp <- rbind(y_tmp,aveSOS2[,ii])
}
View(x_tmp)
x_tmp = rate_IMCLs[,1]*0.1
y_tmp = aveSOS2[,1]
for (ii in 2:25){
x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
y_tmp <- cbind(y_tmp,aveSOS2[,ii])
}
x_tmp = rate_IMCLs*0.1
y_tmp = aveSOS2
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs*0.1)
y_tmp = t(aveSOS2)
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
View(rate_IMCLs)
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs[ii,]*0.1)
y_tmp = t(aveSOS2[ii,])
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
x_tmp = t(rate_IMCLs[ii,]*0.1)
y_tmp = t(aveSOS2[ii,])
View(rate_IMCLs)
View(rate_EMCLs)
x_tmp = t(rate_IMCLs[ii,])*0.1
y_tmp = t(aveSOS2[ii,])
ii = 1
ii = 1
x_tmp = t(rate_IMCLs[ii,])*0.1
y_tmp = t(aveSOS2[ii,])
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
x_tmp = t(rate_IMCLs[,ii])*0.1
y_tmp = t(aveSOS2[,ii])
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(y_tmp ~ x_tmp,
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(y_tmp ~ x_tmp))
result <- lm(y_tmp ~ x_tmp)
result$coefficients
abline(lm(y_tmp ~ x_tmp))
View(y_tmp)
View(x_tmp)
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
x_tmp = t(rate_IMCLs[,ii])*0.1
y_tmp = t(aveSOS2[,ii])
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(t(y_tmp) ~ t(x_tmp),
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
x_tmp = t(rate_IMCLs[,ii])*0.1
y_tmp = t(aveSOS2[,ii])
# for (ii in 2:25){
#   x_tmp <- cbind(x_tmp,rate_IMCLs[,ii]*0.1)
#   y_tmp <- cbind(y_tmp,aveSOS2[,ii])
# }
plot(t(y_tmp) ~ t(x_tmp),
xlab = 'IMCL[%]',
ylab = '平均音速値[m/s]',
ylim = c(1525,1565))
abline(lm(t(y_tmp) ~ t(x_tmp)))
result <- lm(t(y_tmp) ~ t(x_tmp))
result$coefficients
result$coefficients$t(x_tmp)
a <- result$coefficients
a[2] <- result$coefficients
a[2]
b <- a[2]
b
c <- as.vector(b)
result$coefficients[2]
as.vector(result$coefficients[2])
delta_SOS_by_IMCL1 <- matrix(nrow = 25,ncol = 1)
delta_SOS_by_IMCL1[ii,1] <- as.vector(result$coefficients[2])
delta_SOS_by_IMCL1 <- matrix(nrow = 25,ncol = 1)
for (ii in 1:25) {
x_tmp = t(rate_IMCLs[,ii])*0.1
y_tmp = t(aveSOS2[,ii])
result <- lm(t(y_tmp) ~ t(x_tmp))
delta_SOS_by_IMCL1[ii,1] <- as.vector(result$coefficients[2])
}
ave_delta_SOS_by_IMCL1 <- mean(delta_SOS_by_IMCL1)
# これらプロットデータに対して回帰直線を求めて回帰係数を求める．
delta_SOS_by_EMCL1 <- matrix(nrow = 11,ncol = 1)
for (ii in 1:11) {
x_tmp = t(rate_EMCLs[ii,])*0.1
y_tmp = t(aveSOS2[ii,])
result <- lm(t(y_tmp) ~ t(x_tmp))
delta_SOS_by_EMCL1[ii,1] <- as.vector(result$coefficients[2])
}
ave_delta_SOS_by_EMCL1 <- mean(delta_SOS_by_EMCL1)
x_tmp = t(rate_EMCLs[ii,])
y_tmp = t(aveSOS2[ii,])
x_tmp = t(rate_IMCLs[,ii])*0.1
y_tmp = t(aveSOS2[,ii])
delta_SOS_by_EMCL1 <- matrix(nrow = 11,ncol = 1)
for (ii in 1:11) {
x_tmp = rate_EMCLs[ii,]
y_tmp = aveSOS2[ii,]
result <- lm(t(y_tmp) ~ t(x_tmp))
delta_SOS_by_EMCL1[ii,1] <- as.vector(result$coefficients[2])
}
ave_delta_SOS_by_EMCL1 <- mean(delta_SOS_by_EMCL1)
View(rate_EMCLs)
View(rate_IMCLs)
View(rate_EMCLs)
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_IMCLs[1:11,],aveSOS2[1:11,],
col = 1,
type = 'o',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：EMCL，縦軸：平均音速値，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs[1:11,],aveSOS2[1:11,],
col = 1,
type = 'o',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_IMCLs[1:11,],rate_EMCLs[,1:25],
col = 1,
type = 'o',
pch = 1,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：IMCL，縦軸：EMCL，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_IMCLs[1:11,],rate_EMCLs[,1:25],
col = 1,
type = 'p',
pch = 1,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs[,1:25],aveSOS2[,1:25],
col = 1,
type = 'o',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：EMCL，縦軸：平均音速値，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs[,1:25],aveSOS2[1:11,],
col = 1,
type = 'o',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs[,1:25],aveSOS2[1:11,],
col = 1,
type = 'o',
pch = 1:25,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs,aveSOS2,
col = 1,
type = 'p',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(rate_EMCLs,aveSOS2,
col = 1,
type = 'p',
pch = 1,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs[1:11,]),rate_EMCLs[,1:25],
col = 1,
type = 'p',
pch = 1,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs[1:11,]),rate_EMCLs[,1:25],
col = 1,
type = 'p',
pch = 1:11,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs[1:11,]),rate_EMCLs[,1:25],
col = 1,
type = 'p',
pch = 1:11,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs),rate_EMCLs,
col = 1,
type = 'p',
pch = 1:11,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs),t(rate_EMCLs),
col = 1,
type = 'p',
pch = 1:11,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：IMCL，縦軸：EMCL，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_IMCLs),t(rate_EMCLs),
col = 1,
type = 'o',
pch = 1:11,
xlab = 'IMCL[%]',
ylab = 'EMCL[%]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/IMCL_vs_EMCL_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：EMCL，縦軸：平均音速値，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_EMCLs),aveSOS2,
col = 1,
type = 'p',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_EMCLs),aveSOS2,
col = 1,
type = 'p',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_EMCLs),t(aveSOS2),
col = 1,
type = 'p',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
#横軸：EMCL，縦軸：平均音速値，一つのグラフに重ねてプロットする．
windows()
par(ps=18,mex=1.2,pty='s')
matplot(t(rate_EMCLs),t(aveSOS2),
col = 1,
type = 'o',
pch = 1:11,
xlab = 'EMCL[%]',
ylab = '平均音速値[m/s]')
savefilename <- sprintf('//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_02_analyzeRealisticModel_R_IMCLchg_500kHz/EMCL_vs_aveSOS_sum.png')
savePlot(filename = savefilename,type="png")
dev.off()
