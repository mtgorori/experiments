# 残差平方和算出
RSS <- numeric(6)
for (i in 1:6) {
  x_tmp = t(rate_EMCLs[i,])
  y_tmp = t(aveSOS2[i,])
  lm_tmp = lm(y_tmp ~ x_tmp)
  RSS[i]<- deviance(lm_tmp)
}

frq2 <- frq/1e3
# 残差平方和と周波数のプロット
windows()
par(ps=20,mex=1.5)
plot(RSS ~ frq2[,1],
     xlab = '周波数 [kHz]',
     ylab = '残差平方和　　[(m/s)^2]',
     log = 'x',
     type = 'o',
     ylim = c(0 ,30))
savePlot(filename = "//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_09_again_analysis_with_correct_conditions/2018_09_13_analyzeRealisticModel_R_multiFreq/RSS.png",type="png")
dev.off()

# 残差プロット
windows()
plot(lm_tmp)

# 残差算出
residuals <- matrix(nrow = 6,ncol = 25)
for (i in 1:6) {
  x_tmp = t(rate_EMCLs[i,])
  y_tmp = t(aveSOS2[i,])
  lm_tmp = lm(y_tmp ~ x_tmp)
  residuals[i,]<- residuals(lm_tmp)
}
# 
# # 残差と到達点ズレのプロット
# windows()
# par(mfrow=c(2,3),ps=18,mex=1.2,pty='s')
# for (i in 1:6) {
#   x_tmp <- t(varDiff_Point[i,])
#   y_tmp <- residuals[i,]
#   plot(y_tmp ~ x_tmp,
#        xlab = '経路変化分の分散',
#        ylab = '残差[m/s]',
#        main = sprintf('中心周波数=%d kHz',frq2[i,1]),
#        ylim=c(-2.2,2.2))
#   abline(lm(y_tmp ~ x_tmp))
#   result <- lm(y_tmp ~ x_tmp)
#   conf.interval <- predict(result, interval="confidence", level = 0.95)
#   conf.predict <- predict(result, interval="prediction", level = 0.95)
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 2], col = "blue")
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 3], col = "darkgreen")
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 2], col = "blue",lty=2)
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 3], col = "darkgreen",lty=2)
# }
# savePlot(filename = "//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_09_again_analysis_with_correct_conditions/2018_09_13_analyzeRealisticModel_R_multiFreq/residuals_vs_displaceFAS.png",type="png")
# dev.off()

# # 残差と半値全幅のプロット
# windows()
# par(mfrow=c(2,3),ps=18,mex=1.2,pty='s')
# for (i in 1:6) {
#   x_tmp <- t(fwhm_cell[i,])
#   y_tmp <- residuals[i,]
#   plot(y_tmp ~ x_tmp,
#        xlab = '半値全幅[素子数]',
#        ylab = '残差[m/s]',
#        main = sprintf('中心周波数=%d kHz',frq2[i,1]),
#        ylim=c(-2.2,2.2))
#   abline(lm(y_tmp ~ x_tmp))
#   result <- lm(y_tmp ~ x_tmp)
#   conf.interval <- predict(result, interval="confidence", level = 0.95)
#   conf.predict <- predict(result, interval="prediction", level = 0.95)
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 2], col = "blue")
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 3], col = "darkgreen")
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 2], col = "blue",lty=2)
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 3], col = "darkgreen",lty=2)
# }
# savePlot(filename = "//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_09_again_analysis_with_correct_conditions/2018_09_13_analyzeRealisticModel_R_multiFreq/residuals_vs_FWHM.png",type="png")
# dev.off()
# 
# 
# 
# # 経路変化分の分散と主フェレ角のプロット
# windows()
# par(mfrow=c(2,3),ps=18,mex=1.2,pty='s')
# for (i in 1:6) {
#   x_tmp <- t(refractive_dispersion[i,])
#   y_tmp <- t(varDiff_Point[i,])
#   plot(y_tmp ~ x_tmp,
#        xlab = '主フェレ角[rad]',
#        ylab = '経路変化分の分散',
#        main = sprintf('中心周波数=%d kHz',frq2[i,1])
#   )
#   abline(lm(y_tmp ~ x_tmp))
#   result <- lm(y_tmp ~ x_tmp)
#   conf.interval <- predict(result, interval="confidence", level = 0.95)
#   conf.predict <- predict(result, interval="prediction", level = 0.95)
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 2], col = "blue")
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 3], col = "darkgreen")
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 2], col = "blue",lty=2)
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 3], col = "darkgreen",lty=2)
# }
# savePlot(filename = "//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_09_again_analysis_with_correct_conditions/2018_09_13_analyzeRealisticModel_R_multiFreq/var_diff_point_vs_refractive_dispersion.png",type="png")
# dev.off()
# 
# 
# # 半値全幅とフェレ角のプロット
# windows()
# par(mfrow=c(2,3),ps=18,mex=1.2,pty='s')
# for (i in 1:6) {
#   x_tmp <- t(refractive_dispersion[i,])
#   y_tmp <- t(fwhm_cell[i,])
#   plot(y_tmp ~ x_tmp,
#        xlab = 'フェレ角[rad]',
#        ylab = '半値全幅',
#        main = sprintf('中心周波数=%d kHz',frq2[i,1])
#   )
#   abline(lm(y_tmp ~ x_tmp))
#   result <- lm(y_tmp ~ x_tmp)
#   conf.interval <- predict(result, interval="confidence", level = 0.95)
#   conf.predict <- predict(result, interval="prediction", level = 0.95)
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 2], col = "blue")
#   lines(x_tmp[order(x_tmp)], conf.interval[order(x_tmp), 3], col = "darkgreen")
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 2], col = "blue",lty=2)
#   lines(x_tmp[order(x_tmp)], conf.predict[order(x_tmp), 3], col = "darkgreen",lty=2)
# }
# savePlot(filename = "//Azlab-fs01/東研究室/個人work/竹内(ひ)/result/2018_10_09_again_analysis_with_correct_conditions/2018_09_13_analyzeRealisticModel_R_multiFreq/FWHM_vs_refractive_dispersion.png",type="png")
# dev.off()